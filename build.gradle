
apply plugin: "idea"

task clean << {
    delete 'classes', 'out'
}

subprojects {
    apply plugin: "groovy"
    apply plugin: "idea"

    repositories {
        mavenCentral()
        maven { url 'http://oss.sonatype.org/content/repositories/snapshots/' }
    }

    version = '0.1'
    jar {
        manifest {
            attributes 'Implementation-Title': 'spock-freud', 'Implementation-Version': version
        }
    }
}

idea.project.ipr {
    withXml { provider ->
        provider.node.component.find { it.@name == 'VcsDirectoryMappings' }.mapping.@vcs = 'Git'
    }
}

project(':core') {
    dependencies {
        groovy "org.codehaus.groovy:groovy-all:2.+"
        testCompile "org.spockframework:spock-core:0.7-groovy-2.0"
        testCompile 'cglib:cglib-nodep:2.2'
        testCompile 'org.objenesis:objenesis:1.2'
        testCompile fileTree('resources')
    }

    idea.module.iml {
        whenMerged { project -> project.dependencies.add(
                        new org.gradle.plugins.ide.idea.model.ModuleLibrary(
                                [new org.gradle.plugins.ide.idea.model.Path('file://$MODULE_DIR$/src/test/resources')], [], [], [], 'TEST'))
        }
    }
}

project(':examples-resources') {
    dependencies {
        groovy "org.codehaus.groovy:groovy-all:2.+"
    }
}

project(':text') {
    dependencies {
        groovy "org.codehaus.groovy:groovy-all:2.+"
        testCompile "org.spockframework:spock-core:0.7-groovy-2.0"
        testCompile 'cglib:cglib-nodep:2.2'
        testCompile 'org.objenesis:objenesis:1.2'
        testCompile fileTree('resources')
        compile project(':core')
    }

    idea.module.iml {
        whenMerged { project -> project.dependencies.add(
                new org.gradle.plugins.ide.idea.model.ModuleLibrary(
                    [new org.gradle.plugins.ide.idea.model.Path('file://$MODULE_DIR$/src/test/resources')], [], [], [], 'TEST'))
        }
    }	
}

project(':class-object') {
    dependencies {
        groovy "org.codehaus.groovy:groovy-all:2.+"
        testCompile "org.spockframework:spock-core:0.7-groovy-2.0"
        testCompile 'cglib:cglib-nodep:2.2'
        testCompile 'org.objenesis:objenesis:1.2'
        compile project(':core')
    }
}

project(':api-groovy') {
    dependencies {
        groovy "org.codehaus.groovy:groovy-all:2.+"
        testCompile "org.spockframework:spock-core:0.7-groovy-2.0"
        testCompile 'cglib:cglib-nodep:2.2'
        testCompile 'org.objenesis:objenesis:1.2'
        compile project(':core')
    }
}


project(':api-java') {
    dependencies {
        groovy "org.codehaus.groovy:groovy-all:2.+"
        compile "org.hamcrest:hamcrest-core:1.+"
        testCompile "junit:junit:4.+"
        testCompile "org.spockframework:spock-core:0.7-groovy-2.0"
        testCompile 'cglib:cglib-nodep:2.2'
        testCompile 'org.objenesis:objenesis:1.2'
        compile project(':core')
    }
}

project(':examples-spock') {
    dependencies {
        groovy "org.codehaus.groovy:groovy-all:2.+"
        compile "org.spockframework:spock-core:0.7-groovy-2.0"
        compile 'cglib:cglib-nodep:2.2'
        compile 'org.objenesis:objenesis:1.2'
        compile project(':examples-resources')
        compile project(':api-groovy')
        compile project(':text')
        compile project(':class-object')
    }
}

project(':examples-junit') {
    dependencies {
        compile "junit:junit:4.+"
        compile project(':examples-resources')
        compile project(':api-java')
        compile project(':text')
        compile project(':class-object')
    }
}
