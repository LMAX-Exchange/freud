package=org.langera.freudgenerated.javasource
builder=org.langera.freud.javasource.JavaSourceAnalysisBuilder
children=classDecl, packageDecl, aclass
imports=java.lang.reflect.Method

classDecl.adapter.imports=java.util.ArrayList,java.util.Collection,java.util.List,java.util.Collections
classDecl.adapter=final ClassDeclaration classDeclaration = <ToBeAnalysed>.getClassDeclaration();\
        final Collection<ClassDeclaration> innerClassDeclarations = classDeclaration.getInnerClassDeclarationByNameMap().values();\
        List<ClassDeclaration> iterable = new ArrayList<ClassDeclaration>(innerClassDeclarations.size() + 1);\
        iterable.add(classDeclaration);\
        iterable.addAll(innerClassDeclarations);\
        return (innerClassDeclarations.isEmpty()) ? Collections.singleton(classDeclaration) : iterable;

packageDecl.adapter.imports=java.util.Collections
packageDecl.adapter=return Collections.singleton(<ToBeAnalysed>.getPackageDeclaration());

aclass.def=../aclass/class.properties
aclass.adapter.imports=java.util.Collections
aclass.adapter=return Collections.<Class>singleton(<ToBeAnalysed>.loadClass());
